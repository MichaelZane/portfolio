{"ast":null,"code":"var _jsxFileName = \"/Users/codemasterflash/Desktop/LS_Projects/portfolio/src/components/Projects.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst Wrap = styled.div`\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    margin-top: 2%;\n   \n`;\nconst Pject = styled.div`\n    border: 1px solid white;\n    display: flex;\n    margin-top: 5%;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`;\nconst Pject2 = styled.div`\n    border: 1px solid white;\n    display: flex;\n    margin-top: 0;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`;\n\nconst Projects = () => {\n  return React.createElement(React.Fragment, null, React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Pject, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/pro1a.gif\",\n    alt: \"project game of life\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Game of Life\"), \"The game of life, also known as life, is a zero player game, which means it is determined by it's state, needing no further input.  You initiate the game by using the randomly generated pattern or by creating your own on the blank grid then observing it's evolution of generations. It is an example of Turing complete thus allowing to simulate a universal constructor and any Turing machine.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \"- After much research on the Game of Life, I built it using Javascript\", React.createElement(\"a\", {\n    href: \"https://game-of-life-m.herokuapp.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"See deployed app\")))), React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Pject2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/RickMorty1.gif\",\n    alt: \"project Rick and Morty Api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Rick and Morty Page\")))), React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Pject2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/Geoseek.gif\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Geoseek\")))));\n};\n\nexport default Projects;","map":{"version":3,"sources":["/Users/codemasterflash/Desktop/LS_Projects/portfolio/src/components/Projects.js"],"names":["React","styled","Wrap","div","Pject","Pject2","Projects"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAK;;;;;;CAAzB;AAQA,MAAMC,KAAK,GAAGH,MAAM,CAACE,GAAK;;;;;;;;;CAA1B;AAUA,MAAME,MAAM,GAAGJ,MAAM,CAACE,GAAK;;;;;;;;;CAA3B;;AAWA,MAAMG,QAAQ,GAAG,MAAM;AACnB,SACI,0CAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,YAAT;AAAsB,IAAA,GAAG,EAAC,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,6YAQwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARxD,4EAUD;AACA,IAAA,IAAI,EAAG,sCADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVC,CAHJ,CADJ,CAFA,EAuBA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,iBAAT;AAA2B,IAAA,GAAG,EAAC,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CAHA,CADJ,CAvBA,EAqCA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,cAAT;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAHA,CADJ,CArCA,CADJ;AAqDH,CAtDD;;AAwDA,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrap = styled.div `\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    margin-top: 2%;\n   \n`\n\nconst Pject = styled.div `\n    border: 1px solid white;\n    display: flex;\n    margin-top: 5%;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`\nconst Pject2 = styled.div `\n    border: 1px solid white;\n    display: flex;\n    margin-top: 0;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`\n\nconst Projects = () => {\n    return ( \n        <>\n        \n        <Wrap>\n            <Pject>\n                <img src=\"/pro1a.gif\" alt=\"project game of life\" />\n                \n                <div className = \"description\" >\n                <h4>Game of Life</h4>\n                The game of life, also known as life, is a zero player \n                game, which means it is determined by it's state, needing \n                no further input.  You initiate the game by using the \n                randomly generated pattern or by creating your own on the \n                blank grid then observing it's evolution of generations.  \n                It is an example of Turing complete thus allowing to \n                simulate a universal constructor and any Turing machine.<br/>\n                - After much research on the Game of Life, I built it using Javascript\n               <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a>\n                </div>\n            </Pject>\n        </Wrap>\n        \n        <Wrap>\n            <Pject2>\n            <img src=\"/RickMorty1.gif\" alt=\"project Rick and Morty Api\" />\n\n            <div className = \"description\" >\n                <h4>Rick and Morty Page</h4>\n                \n               {/* <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a> */}\n                </div>\n            </Pject2>\n        </Wrap>\n\n        <Wrap>\n            <Pject2>\n            <img src=\"/Geoseek.gif\" alt=\"\" />\n\n            <div className = \"description\" >\n                <h4>Geoseek</h4>\n                \n               {/* <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a> */}\n                </div>\n            </Pject2>\n        </Wrap>\n        </>\n     );\n}\n \nexport default Projects;"]},"metadata":{},"sourceType":"module"}