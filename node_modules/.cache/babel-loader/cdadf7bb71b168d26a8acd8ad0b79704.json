{"ast":null,"code":"var _jsxFileName = \"/Users/codemasterflash/Desktop/LS_Projects/portfolio/src/components/Projects.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst Wrap = styled.div`\n    display: flex;\n    justify-content: center;\n    height: 85vh;\n   \n`;\nconst Pject = styled.div`\n    border: 1px solid white;\n    display: flex;\n    margin-top: 5%;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`;\nconst Pject2 = styled.div`\n    border: 1px solid white;\n    display: flex;\n    margin-top: 0;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`;\n\nconst Projects = () => {\n  return React.createElement(React.Fragment, null, React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Pject, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/pro1a.gif\",\n    alt: \"project game of life\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Game of Life\"), \"The game of life, also known as life, is a zero player game, which means it is determined by it's state, needing no further input.  You initiate the game by using the randomly generated pattern or by creating your own on the blank grid then observing it's evolution of generations. It is an example of Turing complete thus allowing to simulate a universal constructor and any Turing machine.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), \"It follows these simple rules at each step:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \"1. Any live cell with two or three live neighbours survives.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \"2. Any dead cell with three live neighbours becomes a live cell.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"3. All other live cells die in the next generation. Similarly, all other dead cells stay dead.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"These rules apply simultaneously to all cells, causing birth and death and this occurs during a generation. The preceding generation is derived from the previous as the rules continue to be applied repeatedly for each generation.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://game-of-life-m.herokuapp.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"See deployed app\")))), React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Pject2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/RickMorty1.gif\",\n    alt: \"project Rick and Morty Api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Rick and Morty Page\")))), React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Pject2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/Geoseek.gif\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Geoseek\")))));\n};\n\nexport default Projects;","map":{"version":3,"sources":["/Users/codemasterflash/Desktop/LS_Projects/portfolio/src/components/Projects.js"],"names":["React","styled","Wrap","div","Pject","Pject2","Projects"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAK;;;;;CAAzB;AAOA,MAAMC,KAAK,GAAGH,MAAM,CAACE,GAAK;;;;;;;;;CAA1B;AAUA,MAAME,MAAM,GAAGJ,MAAM,CAACE,GAAK;;;;;;;;;CAA3B;;AAWA,MAAMG,QAAQ,GAAG,MAAM;AACnB,SACI,0CAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,YAAT;AAAsB,IAAA,GAAG,EAAC,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,6YAQwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARxD,iDASuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATvC,EAUJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVI,kEAWwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXxD,sEAY4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZ5D,oGAeD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfC,EAgBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBC,2OAqBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBC,EAsBD;AACA,IAAA,IAAI,EAAG,sCADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAtBC,CAHJ,CADJ,CAFA,EAmCA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,iBAAT;AAA2B,IAAA,GAAG,EAAC,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CAHA,CADJ,CAnCA,EAiDA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,cAAT;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAHA,CADJ,CAjDA,CADJ;AAiEH,CAlED;;AAoEA,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrap = styled.div `\n    display: flex;\n    justify-content: center;\n    height: 85vh;\n   \n`\n\nconst Pject = styled.div `\n    border: 1px solid white;\n    display: flex;\n    margin-top: 5%;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`\nconst Pject2 = styled.div `\n    border: 1px solid white;\n    display: flex;\n    margin-top: 0;\n    width: 80%;\n    height: 70%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`\n\nconst Projects = () => {\n    return ( \n        <>\n        \n        <Wrap>\n            <Pject>\n                <img src=\"/pro1a.gif\" alt=\"project game of life\" />\n                \n                <div className = \"description\" >\n                <h4>Game of Life</h4>\n                The game of life, also known as life, is a zero player \n                game, which means it is determined by it's state, needing \n                no further input.  You initiate the game by using the \n                randomly generated pattern or by creating your own on the \n                blank grid then observing it's evolution of generations.  \n                It is an example of Turing complete thus allowing to \n                simulate a universal constructor and any Turing machine.<br/>\n            It follows these simple rules at each step:<br/>\n            <br/>\n            1. Any live cell with two or three live neighbours survives.<br/>\n            2. Any dead cell with three live neighbours becomes a live cell.<br/>\n            3. All other live cells die in the next generation. Similarly, \n               all other dead cells stay dead.\n               <br/>\n               <br/>\n               These rules apply simultaneously to all cells, causing birth \n               and death and this occurs during a generation. The preceding \n               generation is derived from the previous as the rules continue \n               to be applied repeatedly for each generation.\n               <br/>\n               <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a>\n                </div>\n            </Pject>\n        </Wrap>\n        \n        <Wrap>\n            <Pject2>\n            <img src=\"/RickMorty1.gif\" alt=\"project Rick and Morty Api\" />\n\n            <div className = \"description\" >\n                <h4>Rick and Morty Page</h4>\n                \n               {/* <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a> */}\n                </div>\n            </Pject2>\n        </Wrap>\n\n        <Wrap>\n            <Pject2>\n            <img src=\"/Geoseek.gif\" alt=\"\" />\n\n            <div className = \"description\" >\n                <h4>Geoseek</h4>\n                \n               {/* <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a> */}\n                </div>\n            </Pject2>\n        </Wrap>\n        </>\n     );\n}\n \nexport default Projects;"]},"metadata":{},"sourceType":"module"}