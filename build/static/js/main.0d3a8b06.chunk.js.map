{"version":3,"sources":["components/AboutMe.js","components/Skills.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["About","styled","div","Wrap","AboutMe","Skill","Skills","class","Image","img","Pject","Pject2","Projects","src","alt","className","href","Footer","footer","aria-hidden","Title","h1","SubTitle","h3","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2zBAIA,IAAMA,EAAQC,IAAOC,IAAV,KAaLC,EAAOF,IAAOC,IAAV,KA6BKE,EAxBC,WAEZ,OACI,kBAACD,EAAD,KACA,kBAACH,EAAD,KAEI,olB,oaCzBZ,IAAMG,EAAOF,IAAOC,IAAV,KAIJG,EAAQJ,IAAOC,IAAV,KAgCII,EArBA,WACX,OACI,kBAAC,EAAD,KAEI,kBAACD,EAAD,KAEI,uBAAGE,MAAM,uBAGT,uBAAGA,MAAM,uBACT,uBAAGA,MAAM,2BACT,uBAAGA,MAAM,wBACT,uBAAGA,MAAM,sBACT,uBAAGA,MAAM,0BACT,uBAAGA,MAAM,yBACT,uBAAGA,MAAM,qBACT,uBAAGA,MAAM,6B,mrCC/BzB,IAAMJ,EAAOF,IAAOC,IAAV,KASJM,EAAQP,IAAOQ,IAAV,KAaLC,EAAQT,IAAOC,IAAV,KAWLS,EAASV,IAAOC,IAAV,KA6EGU,EAhEE,WACb,OACI,oCAEA,kBAAC,EAAD,KACI,kBAACF,EAAD,KACI,kBAACF,EAAD,CAAOK,IAAI,aAAaC,IAAI,yBAE5B,yBAAKC,UAAY,eACjB,4CADA,0YAQwD,6BARxD,iDAS8C,6BAC9C,6BACD,uBACAC,KAAO,wCADP,uBAOP,kBAAC,EAAD,KACI,kBAACL,EAAD,KACA,kBAACH,EAAD,CAAOO,UAAU,SAASF,IAAI,kBAAkBC,IAAI,+BAEpD,yBAAKC,UAAY,eACb,mDADJ,2FAYJ,kBAAC,EAAD,KACI,kBAACJ,EAAD,KACA,kBAACH,EAAD,CAAOO,UAAU,SAASF,IAAI,eAAeC,IAAI,KAEjD,yBAAKC,UAAY,eACb,uCADJ,mY,8nBC5FZ,IAAMZ,EAAOF,IAAOC,IAAV,KAQJe,EAAShB,IAAOC,IAAV,KA8BGgB,EAjBA,WACX,OACI,6BACI,kBAAC,EAAD,KACI,kBAACD,EAAD,KAEI,uBAAGD,KAAO,oDAAmD,uBAAGT,MAAM,8BAA8BY,cAAY,UAChH,uBAAGH,KAAK,kCAAiC,uBAAGT,MAAM,gCAClD,uBAAGS,KAAK,uCAAsC,uBAAGT,MAAM,iCACvD,6BACA,oE,qkBC1BpB,IAAMa,EAAQnB,IAAOoB,GAAV,KAOLC,EAAWrB,IAAOsB,GAAV,KAQAtB,IAAOC,IAAV,KAyCIsB,MAlCf,WACE,OACE,oCACA,yBAAKT,UAAU,OACb,kBAACK,EAAD,wBACA,kBAACE,EAAD,8DAAgE,6BAC9D,6BADF,0CAEyC,6BACvC,6BAHF,0BAKE,6BACA,6BAEA,uBAAGN,KAAO,oDAAmD,uBAAGT,MAAM,8BAA8BY,cAAY,UAChH,uBAAGH,KAAO,kCAAiC,uBAAGT,MAAM,gCACpD,uBAAGS,KAAO,uCAAsC,uBAAGT,MAAM,kCAQ7D,kBAAC,EAAD,MACA,sCACA,kBAAC,EAAD,MACA,wCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SC9CgBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0d3a8b06.chunk.js","sourcesContent":["import React from 'react'\n\nimport styled from 'styled-components'\n\nconst About = styled.div `\n    width: 80%;\n    height: 100%;\n    border: 1.25px solid white;\n    border-radius: 5px;\n    color: \twhite;\n    text-shadow: 1px 1px 2px black, 0 0 25px #00ffff, 0 0 8px #8533ff;\n    font-size:  1.7rem;\n    font-family: 'Love Ya Like A Sister';\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n    background-color:  #00004d;\n    \n`\nconst Wrap = styled.div `\n    display: flex;\n    justify-content: center;\n`\n\nconst AboutMe = () => {\n\n    return (\n        <Wrap>\n        <About>\n            \n            <p>\n            I've been a fan of tech since an early age . I love computers \n            and what you can achieve by using them.  The tech world is moving fast\n            and can be a challenge to keep up.  I have adapted by remaining in a constant\n            learning environment. \n            I am on a journey of enlightenment for web developing. You gotta \n            love what you do and my passion for \n            web development is strong. I have been a problem solver for \n            much of my life. It's what I love to do.  \n            My current skills are:\n            JavaScript, React, Nodejs, Express, Knex, PostgreSQL, Python, HTML5, \n            CSS3, Sass, Styled Components, Jest   \n            </p>\n        </About>\n        </Wrap>\n    )\n}\n\nexport default AboutMe","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrap = styled.div `\n    display: flex;\n    justify-content: center;\n`\nconst Skill = styled.div `\n    border: 1px solid white;\n    margin-top: 5%;\n    width: 80%;\n    height: 100%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n`\n\n\nconst Skills = () => {\n    return (\n        <Wrap>\n            \n            <Skill>\n                \n                <i class=\"fab fa-html5 fa-7x\"></i>\n                \n               \n                <i class=\"fab fa-react fa-7x\"></i>\n                <i class=\"fab fa-js-square fa-7x\"></i>\n                <i class=\"fab fa-python fa-7x\"></i>\n                <i class=\"fab fa-sass fa-7x\"></i>\n                <i class=\"fab fa-css3-alt fa-7x\"></i>\n                <i class=\"fab fa-node-js fa-7x\"></i>\n                <i class=\"fab fa-git fa-7x\"></i>\n                <i class=\"fas fa-database fa-7x\"></i>\n            </Skill>\n        </Wrap>\n    )\n}\nexport default Skills;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrap = styled.div `\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    margin-top: 2%;\n    margin-bottom: 2%;\n        \n    \n`\nconst Image = styled.img `\n    margin: 3%;\n    @media screen and (max-width: 700px) {    \n        height: 100%;\n        width: 94%;   \n      }\n      @media screen and (max-width: 1300px) {    \n        height: 100%;\n        width: 94%;   \n      }\n\n`\n\nconst Pject = styled.div `\n    border: 1px solid white;\n    display: flex;\n    margin-top: 5%;\n    width: 80%;\n    height: 100%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n    flex-direction: column;\n`\nconst Pject2 = styled.div `\n    border: 1px solid white;\n    display: flex;\n    margin-top: 0;\n    width: 80%;\n    height: 100%;\n    color: white;\n    background-color:  #00004d;\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n    flex-direction: column;\n    \n`\n\nconst Projects = () => {\n    return ( \n        <>\n        \n        <Wrap>\n            <Pject>\n                <Image src=\"/pro1a.gif\" alt=\"project game of life\" />\n                \n                <div className = \"description\" >\n                <h4>Game of Life</h4>\n                The game of life, also known as life, is a zero player \n                game, which means it is determined by it's state, needing \n                no further input.  You initiate the game by using the \n                randomly generated pattern or by creating your own on the \n                blank grid then observing it's evolution of generations.  \n                It is an example of Turing complete thus allowing to \n                simulate a universal constructor and any Turing machine.<br/>\n                It was created using JavaScript, CSS, and HTML<br/>\n                <br/>\n               <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a>\n                </div>\n            </Pject>\n        </Wrap>\n        \n        <Wrap>\n            <Pject2>\n            <Image className=\"image2\" src=\"/RickMorty1.gif\" alt=\"project Rick and Morty Api\" />\n\n            <div className = \"description\" >\n                <h4>Rick and Morty Page</h4>\n                This app was made with React and JavaScript.  I had fun using the \n                Rick and Morty API.  \n                \n               {/* <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a> */}\n                </div>\n            </Pject2>\n        </Wrap>\n\n        <Wrap>\n            <Pject2>\n            <Image className=\"image3\" src=\"/Geoseek.gif\" alt=\"\" />\n\n            <div className = \"description\" >\n                <h4>Geoseek</h4>\n                Geoseek was a 8 week project that I worked on with a group of 3 IOS developers,\n                and a team of 5 web developers.  We worked closely with a stakeholder, \n                having weekly meetings and talking through her expectations for the app.abs\n                We used ReactJs for the client side of the app and used NodeJS for the \n                backend server.  The app was a way to provide a pure digital Geocache experience.\n                \n               {/* <a\n               href = \"https://game-of-life-m.herokuapp.com\">See deployed app\n               </a> */}\n                </div>\n            </Pject2>\n        </Wrap>\n        </>\n     );\n}\n \nexport default Projects;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrap = styled.div `\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    margin-top: 2%;\n    margin-bottom: 2%;\n   \n`\nconst Footer = styled.div `\n    width: 80%;\n    height: 100%;\n    border: 1.25px solid white;\n    border-radius: 5px;\n    color: \twhite;\n    text-shadow: 1px 1px 2px black, 0 0 25px #00ffff, 0 0 8px #8533ff;\n    font-size:  1.7rem;\n    font-family: 'Love Ya Like A Sister';\n    box-shadow: 4px 4px 8px 4px rgb(0, 255, 255), 4px 6px 20px 4px rgba(0, 0, 0, 0.19);\n    background-color:  #00004d;\n`\n\nconst footer = () => {\n    return ( \n        <div>\n            <Wrap>\n                <Footer>\n                    {/* <a href=\"\"><i class=\"fa fa-envelope fa-3x\" aria-hidden=\"true\"></i></a> */}\n                    <a href = \"https://www.linkedin.com/in/michael-stevens-dev/\"><i class=\"fa fa-linkedin-square fa-3x\" aria-hidden=\"true\"></i></a>\n                    <a href=\"https://github.com/mzstevens69\"><i class=\"fab fa-github-square fa-3x\" ></i></a>\n                    <a href=\"https://twitter.com/Michaelzanemike\"><i class=\"fab fa-twitter-square fa-3x\" ></i></a>\n                    <br/>\n                    <span>Michael Stevens copyright 2020</span>\n                </Footer>\n            </Wrap>\n        </div>\n     );\n}\n \nexport default footer;","import React from 'react';\nimport styled from 'styled-components'\nimport './App.css';\nimport AboutMe from './components/AboutMe'\nimport Skills from './components/Skills'\nimport Projects from './components/Projects'\nimport Footer from './components/Footer';\n\nconst Title = styled.h1 `\n  margin: 5%;\n  color: white;\n  font-family: 'Love Ya Like A Sister';\n  font-size: 2.5rem;\n  text-shadow: 1px 1px 2px black, 0 0 25px #00ffff, 0 0 8px #8533ff;\n`\nconst SubTitle = styled.h3 `\n  color: white;\n  font-family: 'Love Ya Like A Sister';\n  margin: 2%;\n  font-size: 1.6rem;\n  text-shadow: 1px 1px 2px black, 0 0 25px #00ffff, 0 0 8px #8533ff;\n`\n\nconst Icons = styled.div `\n  color: \t #4dffff;\n  padding: 2%;\n`\n\n\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n      <Title>Michael Stevens</Title>\n      <SubTitle>Full Stack Engineer | Lover of tech | Lifetime Learner<br/>    \n        <br/>\n        Living in the Nashville, Tennessee area<br/>\n        <br/>\n        stevensmike36@yahoo.com\n        <br/>\n        <br/>\n        {/* <a href = \"stevensmike36@yahoo.com\"><i class=\"fa fa-envelope fa-3x\" aria-hidden=\"true\"></i></a> */}\n        <a href = \"https://www.linkedin.com/in/michael-stevens-dev/\"><i class=\"fa fa-linkedin-square fa-3x\" aria-hidden=\"true\"></i></a>\n        <a href = \"https://github.com/mzstevens69\"><i class=\"fab fa-github-square fa-3x\" ></i></a>\n        <a href = \"https://twitter.com/Michaelzanemike\"><i class=\"fab fa-twitter-square fa-3x\" ></i></a>\n        </SubTitle>\n      {/* <Icons> */}\n      {/* <i class=\"fab fa-facebook-square fa-3x\" ></i> */}\n      {/* <i class=\"fab fa-twitter-square fa-3x\" ></i> */}\n      {/* <i class=\"fas fa-envelope-square fa-3x\"></i> */}\n      {/* </Icons> */}\n    \n    <AboutMe/>\n    <h1>Skills</h1>\n    <Skills/>\n    <h1>Projects</h1>\n    <Projects />\n    <Footer />\n  </div>\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}